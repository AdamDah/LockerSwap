{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162000d5838038062000d588339810160408190526200003491620002ab565b82826003620000448382620003ad565b506004620000538282620003ad565b5050506200006833826200007160201b60201c565b505050620004a1565b6001600160a01b038216620000a15760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000af60008383620000b3565b5050565b6001600160a01b038316620000e2578060026000828254620000d6919062000479565b90915550620001569050565b6001600160a01b03831660009081526020819052604090205481811015620001375760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000098565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001745760028054829003905562000193565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001d991815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200020e57600080fd5b81516001600160401b03808211156200022b576200022b620001e6565b604051601f8301601f19908116603f01168101908282118183101715620002565762000256620001e6565b816040528381526020925086838588010111156200027357600080fd5b600091505b8382101562000297578582018301518183018401529082019062000278565b600093810190920192909252949350505050565b600080600060608486031215620002c157600080fd5b83516001600160401b0380821115620002d957600080fd5b620002e787838801620001fc565b94506020860151915080821115620002fe57600080fd5b506200030d86828701620001fc565b925050604084015190509250925092565b600181811c908216806200033357607f821691505b6020821081036200035457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003a857600081815260208120601f850160051c81016020861015620003835750805b601f850160051c820191505b81811015620003a4578281556001016200038f565b5050505b505050565b81516001600160401b03811115620003c957620003c9620001e6565b620003e181620003da84546200031e565b846200035a565b602080601f831160018114620004195760008415620004005750858301515b600019600386901b1c1916600185901b178555620003a4565b600085815260208120601f198616915b828110156200044a5788860151825594840194600190910190840162000429565b5085821015620004695787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200049b57634e487b7160e01b600052601160045260246000fd5b92915050565b6108a780620004b16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063313ce56711610066578063313ce5671461011157806370a082311461012057806395d89b4114610149578063a9059cbb14610151578063dd62ed3e1461016457600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806321df0da7146100f657806323b872dd146100fe575b600080fd5b6100ab61019d565b6040516100b891906105df565b60405180910390f35b6100d46100cf366004610649565b61022f565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d4610249565b6100d461010c366004610673565b610271565b604051601281526020016100b8565b6100e861012e3660046106af565b6001600160a01b031660009081526020819052604090205490565b6100ab610295565b6100d461015f366004610649565b6102a4565b6100e86101723660046106d1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101ac90610704565b80601f01602080910402602001604051908101604052809291908181526020018280546101d890610704565b80156102255780601f106101fa57610100808354040283529160200191610225565b820191906000526020600020905b81548152906001019060200180831161020857829003601f168201915b5050505050905090565b60003361023d8185856102b2565b60019150505b92915050565b600061026b3361025b6012600a610838565b61026690600a610847565b6102c4565b50600190565b60003361027f858285610303565b61028a858585610381565b506001949350505050565b6060600480546101ac90610704565b60003361023d818585610381565b6102bf83838360016103e0565b505050565b6001600160a01b0382166102f35760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6102ff600083836104b5565b5050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461037b578181101561036c57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016102ea565b61037b848484840360006103e0565b50505050565b6001600160a01b0383166103ab57604051634b637e8f60e11b8152600060048201526024016102ea565b6001600160a01b0382166103d55760405163ec442f0560e01b8152600060048201526024016102ea565b6102bf8383836104b5565b6001600160a01b03841661040a5760405163e602df0560e01b8152600060048201526024016102ea565b6001600160a01b03831661043457604051634a1406b160e11b8152600060048201526024016102ea565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561037b57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104a791815260200190565b60405180910390a350505050565b6001600160a01b0383166104e05780600260008282546104d5919061085e565b909155506105529050565b6001600160a01b038316600090815260208190526040902054818110156105335760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102ea565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661056e5760028054829003905561058d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105d291815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561060c578581018301518582016040015282016105f0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461064457600080fd5b919050565b6000806040838503121561065c57600080fd5b6106658361062d565b946020939093013593505050565b60008060006060848603121561068857600080fd5b6106918461062d565b925061069f6020850161062d565b9150604084013590509250925092565b6000602082840312156106c157600080fd5b6106ca8261062d565b9392505050565b600080604083850312156106e457600080fd5b6106ed8361062d565b91506106fb6020840161062d565b90509250929050565b600181811c9082168061071857607f821691505b60208210810361073857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561078f5781600019048211156107755761077561073e565b8085161561078257918102915b93841c9390800290610759565b509250929050565b6000826107a657506001610243565b816107b357506000610243565b81600181146107c957600281146107d3576107ef565b6001915050610243565b60ff8411156107e4576107e461073e565b50506001821b610243565b5060208310610133831016604e8410600b8410161715610812575081810a610243565b61081c8383610754565b80600019048211156108305761083061073e565b029392505050565b60006106ca60ff841683610797565b80820281158282048414176102435761024361073e565b808201808211156102435761024361073e56fea26469706673582212208052e8e52abf9e8f110bff55980810dc31ff38f7dfcfe01e2672465391b11dad64736f6c63430008150033",
    "sourceMap": "117:315:24:-:0;;;145:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;227:4;233:6;2012:5:15;:13;227:4:24;2012:5:15;:13;:::i;:::-;-1:-1:-1;2036:7:15;:17;2046:7;2036;:17;:::i;:::-;;1945:116;;256:32:24::1;262:10;274:13;256:5;;;:32;;:::i;:::-;145:155:::0;;;117:315;;7946:213:15;-1:-1:-1;;;;;8017:21:15;;8013:93;;8062:32;;-1:-1:-1;;;8062:32:15;;8091:1;8062:32;;;4354:51:25;4327:18;;8062:32:15;;;;;;;;8013:93;8116:35;8132:1;8136:7;8145:5;8116:7;:35::i;:::-;7946:213;;:::o;6458:1135::-;-1:-1:-1;;;;;6548:18:15;;6544:552;;6702:5;6686:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6544:552:15;;-1:-1:-1;6544:552:15;;-1:-1:-1;;;;;6762:15:15;;6740:19;6762:15;;;;;;;;;;;6796:19;;;6792:117;;;6843:50;;-1:-1:-1;;;6843:50:15;;-1:-1:-1;;;;;4863:32:25;;6843:50:15;;;4845:51:25;4912:18;;;4905:34;;;4955:18;;;4948:34;;;4818:18;;6843:50:15;4643:345:25;6792:117:15;-1:-1:-1;;;;;7032:15:15;;:9;:15;;;;;;;;;;7050:19;;;;7032:37;;6544:552;-1:-1:-1;;;;;7112:16:15;;7108:435;;7278:12;:21;;;;;;;7108:435;;;-1:-1:-1;;;;;7494:13:15;;:9;:13;;;;;;;;;;:22;;;;;;7108:435;7575:2;-1:-1:-1;;;;;7560:25:15;7569:4;-1:-1:-1;;;;;7560:25:15;;7579:5;7560:25;;;;5139::25;;5127:2;5112:18;;4993:177;7560:25:15;;;;;;;;6458:1135;;;:::o;14:127:25:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:25;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:25;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:25:o;991:623::-;1099:6;1107;1115;1168:2;1156:9;1147:7;1143:23;1139:32;1136:52;;;1184:1;1181;1174:12;1136:52;1211:16;;-1:-1:-1;;;;;1276:14:25;;;1273:34;;;1303:1;1300;1293:12;1273:34;1326:61;1379:7;1370:6;1359:9;1355:22;1326:61;:::i;:::-;1316:71;;1433:2;1422:9;1418:18;1412:25;1396:41;;1462:2;1452:8;1449:16;1446:36;;;1478:1;1475;1468:12;1446:36;;1501:63;1556:7;1545:8;1534:9;1530:24;1501:63;:::i;:::-;1491:73;;;1604:2;1593:9;1589:18;1583:25;1573:35;;991:623;;;;;:::o;1619:380::-;1698:1;1694:12;;;;1741;;;1762:61;;1816:4;1808:6;1804:17;1794:27;;1762:61;1869:2;1861:6;1858:14;1838:18;1835:38;1832:161;;1915:10;1910:3;1906:20;1903:1;1896:31;1950:4;1947:1;1940:15;1978:4;1975:1;1968:15;1832:161;;1619:380;;;:::o;2130:545::-;2232:2;2227:3;2224:11;2221:448;;;2268:1;2293:5;2289:2;2282:17;2338:4;2334:2;2324:19;2408:2;2396:10;2392:19;2389:1;2385:27;2379:4;2375:38;2444:4;2432:10;2429:20;2426:47;;;-1:-1:-1;2467:4:25;2426:47;2522:2;2517:3;2513:12;2510:1;2506:20;2500:4;2496:31;2486:41;;2577:82;2595:2;2588:5;2585:13;2577:82;;;2640:17;;;2621:1;2610:13;2577:82;;;2581:3;;;2221:448;2130:545;;;:::o;2851:1352::-;2971:10;;-1:-1:-1;;;;;2993:30:25;;2990:56;;;3026:18;;:::i;:::-;3055:97;3145:6;3105:38;3137:4;3131:11;3105:38;:::i;:::-;3099:4;3055:97;:::i;:::-;3207:4;;3271:2;3260:14;;3288:1;3283:663;;;;3990:1;4007:6;4004:89;;;-1:-1:-1;4059:19:25;;;4053:26;4004:89;-1:-1:-1;;2808:1:25;2804:11;;;2800:24;2796:29;2786:40;2832:1;2828:11;;;2783:57;4106:81;;3253:944;;3283:663;2077:1;2070:14;;;2114:4;2101:18;;-1:-1:-1;;3319:20:25;;;3437:236;3451:7;3448:1;3445:14;3437:236;;;3540:19;;;3534:26;3519:42;;3632:27;;;;3600:1;3588:14;;;;3467:19;;3437:236;;;3441:3;3701:6;3692:7;3689:19;3686:201;;;3762:19;;;3756:26;-1:-1:-1;;3845:1:25;3841:14;;;3857:3;3837:24;3833:37;3829:42;3814:58;3799:74;;3686:201;-1:-1:-1;;;;;3933:1:25;3917:14;;;3913:22;3900:36;;-1:-1:-1;2851:1352:25:o;4416:222::-;4481:9;;;4502:10;;;4499:133;;;4554:10;4549:3;4545:20;4542:1;4535:31;4589:4;4586:1;4579:15;4617:4;4614:1;4607:15;4499:133;4416:222;;;;:::o;4993:177::-;117:315:24;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063313ce56711610066578063313ce5671461011157806370a082311461012057806395d89b4114610149578063a9059cbb14610151578063dd62ed3e1461016457600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806321df0da7146100f657806323b872dd146100fe575b600080fd5b6100ab61019d565b6040516100b891906105df565b60405180910390f35b6100d46100cf366004610649565b61022f565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d4610249565b6100d461010c366004610673565b610271565b604051601281526020016100b8565b6100e861012e3660046106af565b6001600160a01b031660009081526020819052604090205490565b6100ab610295565b6100d461015f366004610649565b6102a4565b6100e86101723660046106d1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101ac90610704565b80601f01602080910402602001604051908101604052809291908181526020018280546101d890610704565b80156102255780601f106101fa57610100808354040283529160200191610225565b820191906000526020600020905b81548152906001019060200180831161020857829003601f168201915b5050505050905090565b60003361023d8185856102b2565b60019150505b92915050565b600061026b3361025b6012600a610838565b61026690600a610847565b6102c4565b50600190565b60003361027f858285610303565b61028a858585610381565b506001949350505050565b6060600480546101ac90610704565b60003361023d818585610381565b6102bf83838360016103e0565b505050565b6001600160a01b0382166102f35760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6102ff600083836104b5565b5050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461037b578181101561036c57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016102ea565b61037b848484840360006103e0565b50505050565b6001600160a01b0383166103ab57604051634b637e8f60e11b8152600060048201526024016102ea565b6001600160a01b0382166103d55760405163ec442f0560e01b8152600060048201526024016102ea565b6102bf8383836104b5565b6001600160a01b03841661040a5760405163e602df0560e01b8152600060048201526024016102ea565b6001600160a01b03831661043457604051634a1406b160e11b8152600060048201526024016102ea565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561037b57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104a791815260200190565b60405180910390a350505050565b6001600160a01b0383166104e05780600260008282546104d5919061085e565b909155506105529050565b6001600160a01b038316600090815260208190526040902054818110156105335760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102ea565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661056e5760028054829003905561058d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105d291815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561060c578581018301518582016040015282016105f0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461064457600080fd5b919050565b6000806040838503121561065c57600080fd5b6106658361062d565b946020939093013593505050565b60008060006060848603121561068857600080fd5b6106918461062d565b925061069f6020850161062d565b9150604084013590509250925092565b6000602082840312156106c157600080fd5b6106ca8261062d565b9392505050565b600080604083850312156106e457600080fd5b6106ed8361062d565b91506106fb6020840161062d565b90509250929050565b600181811c9082168061071857607f821691505b60208210810361073857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561078f5781600019048211156107755761077561073e565b8085161561078257918102915b93841c9390800290610759565b509250929050565b6000826107a657506001610243565b816107b357506000610243565b81600181146107c957600281146107d3576107ef565b6001915050610243565b60ff8411156107e4576107e461073e565b50506001821b610243565b5060208310610133831016604e8410600b8410161715610812575081810a610243565b61081c8383610754565b80600019048211156108305761083061073e565b029392505050565b60006106ca60ff841683610797565b80820281158282048414176102435761024361073e565b808201808211156102435761024361073e56fea26469706673582212208052e8e52abf9e8f110bff55980810dc31ff38f7dfcfe01e2672465391b11dad64736f6c63430008150033",
    "sourceMap": "117:315:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:91:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4424:190;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:25;;1162:22;1144:41;;1132:2;1117:18;4424:190:15;1004:187:25;3233:99:15;3312:12;;3233:99;;;1342:25:25;;;1330:2;1315:18;3233:99:15;1196:177:25;308:121:24;;;:::i;5192:249:15:-;;;;;;:::i;:::-;;:::i;3084:84::-;;;3158:2;1853:36:25;;1841:2;1826:18;3084:84:15;1711:184:25;3395:118:15;;;;;;:::i;:::-;-1:-1:-1;;;;;3487:18:15;3460:7;3487:18;;;;;;;;;;;;3395:118;2341:95;;;:::i;3718:182::-;;;;;;:::i;:::-;;:::i;3963:142::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4070:18:15;;;4043:7;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3963:142;2131:91;2176:13;2209:5;2202:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:91;:::o;4424:190::-;4497:4;752:10:18;4553:31:15;752:10:18;4569:7:15;4578:5;4553:8;:31::i;:::-;4602:4;4595:11;;;4424:190;;;;;:::o;308:121:24:-;343:4;359:40;365:10;382:16;3158:2:15;382::24;:16;:::i;:::-;377:21;;:2;:21;:::i;:::-;359:5;:40::i;:::-;-1:-1:-1;417:4:24;;308:121::o;5192:249:15:-;5279:4;752:10:18;5337:37:15;5353:4;752:10:18;5368:5:15;5337:15;:37::i;:::-;5385:26;5395:4;5401:2;5405:5;5385:9;:26::i;:::-;-1:-1:-1;5429:4:15;;5192:249;-1:-1:-1;;;;5192:249:15:o;2341:95::-;2388:13;2421:7;2414:14;;;;;:::i;3718:182::-;3787:4;752:10:18;3843:27:15;752:10:18;3860:2:15;3864:5;3843:9;:27::i;9251:130::-;9336:37;9345:5;9352:7;9361:5;9368:4;9336:8;:37::i;:::-;9251:130;;;:::o;7946:213::-;-1:-1:-1;;;;;8017:21:15;;8013:93;;8062:32;;-1:-1:-1;;;8062:32:15;;8091:1;8062:32;;;4575:51:25;4548:18;;8062:32:15;;;;;;;;8013:93;8116:35;8132:1;8136:7;8145:5;8116:7;:35::i;:::-;7946:213;;:::o;10967:487::-;-1:-1:-1;;;;;4070:18:15;;;11067:24;4070:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11134:37:15;;11130:317;;11211:5;11192:16;:24;11188:132;;;11244:60;;-1:-1:-1;;;11244:60:15;;-1:-1:-1;;;;;4857:32:25;;11244:60:15;;;4839:51:25;4906:18;;;4899:34;;;4949:18;;;4942:34;;;4812:18;;11244:60:15;4637:345:25;11188:132:15;11363:57;11372:5;11379:7;11407:5;11388:16;:24;11414:5;11363:8;:57::i;:::-;11056:398;10967:487;;;:::o;5826:308::-;-1:-1:-1;;;;;5910:18:15;;5906:88;;5952:30;;-1:-1:-1;;;5952:30:15;;5979:1;5952:30;;;4575:51:25;4548:18;;5952:30:15;4429:203:25;5906:88:15;-1:-1:-1;;;;;6008:16:15;;6004:88;;6048:32;;-1:-1:-1;;;6048:32:15;;6077:1;6048:32;;;4575:51:25;4548:18;;6048:32:15;4429:203:25;6004:88:15;6102:24;6110:4;6116:2;6120:5;6102:7;:24::i;10232:443::-;-1:-1:-1;;;;;10345:19:15;;10341:91;;10388:32;;-1:-1:-1;;;10388:32:15;;10417:1;10388:32;;;4575:51:25;4548:18;;10388:32:15;4429:203:25;10341:91:15;-1:-1:-1;;;;;10446:21:15;;10442:92;;10491:31;;-1:-1:-1;;;10491:31:15;;10519:1;10491:31;;;4575:51:25;4548:18;;10491:31:15;4429:203:25;10442:92:15;-1:-1:-1;;;;;10544:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10590:78;;;;10641:7;-1:-1:-1;;;;;10625:31:15;10634:5;-1:-1:-1;;;;;10625:31:15;;10650:5;10625:31;;;;1342:25:25;;1330:2;1315:18;;1196:177;10625:31:15;;;;;;;;10232:443;;;;:::o;6458:1135::-;-1:-1:-1;;;;;6548:18:15;;6544:552;;6702:5;6686:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6544:552:15;;-1:-1:-1;6544:552:15;;-1:-1:-1;;;;;6762:15:15;;6740:19;6762:15;;;;;;;;;;;6796:19;;;6792:117;;;6843:50;;-1:-1:-1;;;6843:50:15;;-1:-1:-1;;;;;4857:32:25;;6843:50:15;;;4839:51:25;4906:18;;;4899:34;;;4949:18;;;4942:34;;;4812:18;;6843:50:15;4637:345:25;6792:117:15;-1:-1:-1;;;;;7032:15:15;;:9;:15;;;;;;;;;;7050:19;;;;7032:37;;6544:552;-1:-1:-1;;;;;7112:16:15;;7108:435;;7278:12;:21;;;;;;;7108:435;;;-1:-1:-1;;;;;7494:13:15;;:9;:13;;;;;;;;;;:22;;;;;;7108:435;7575:2;-1:-1:-1;;;;;7560:25:15;7569:4;-1:-1:-1;;;;;7560:25:15;;7579:5;7560:25;;;;1342::25;;1330:2;1315:18;;1196:177;7560:25:15;;;;;;;;6458:1135;;;:::o;14:548:25:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:25;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:25:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:25:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:127::-;2802:10;2797:3;2793:20;2790:1;2783:31;2833:4;2830:1;2823:15;2857:4;2854:1;2847:15;2873:422;2962:1;3005:5;2962:1;3019:270;3040:7;3030:8;3027:21;3019:270;;;3099:4;3095:1;3091:6;3087:17;3081:4;3078:27;3075:53;;;3108:18;;:::i;:::-;3158:7;3148:8;3144:22;3141:55;;;3178:16;;;;3141:55;3257:22;;;;3217:15;;;;3019:270;;;3023:3;2873:422;;;;;:::o;3300:806::-;3349:5;3379:8;3369:80;;-1:-1:-1;3420:1:25;3434:5;;3369:80;3468:4;3458:76;;-1:-1:-1;3505:1:25;3519:5;;3458:76;3550:4;3568:1;3563:59;;;;3636:1;3631:130;;;;3543:218;;3563:59;3593:1;3584:10;;3607:5;;;3631:130;3668:3;3658:8;3655:17;3652:43;;;3675:18;;:::i;:::-;-1:-1:-1;;3731:1:25;3717:16;;3746:5;;3543:218;;3845:2;3835:8;3832:16;3826:3;3820:4;3817:13;3813:36;3807:2;3797:8;3794:16;3789:2;3783:4;3780:12;3776:35;3773:77;3770:159;;;-1:-1:-1;3882:19:25;;;3914:5;;3770:159;3961:34;3986:8;3980:4;3961:34;:::i;:::-;4031:6;4027:1;4023:6;4019:19;4010:7;4007:32;4004:58;;;4042:18;;:::i;:::-;4080:20;;3300:806;-1:-1:-1;;;3300:806:25:o;4111:140::-;4169:5;4198:47;4239:4;4229:8;4225:19;4219:4;4198:47;:::i;4256:168::-;4329:9;;;4360;;4377:15;;;4371:22;;4357:37;4347:71;;4398:18;;:::i;4987:125::-;5052:9;;;5073:10;;;5070:36;;;5086:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "getToken()": "21df0da7",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TD.sol\":\"TD\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x198433113545cc855ffb34ec844854dd59e1b8420a97a876ce67eae3b3929c50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d26179570c319b970030e366c034a27921c6de0e78bbe32ea34a1b30c08d24af\",\"dweb:/ipfs/QmTKRYXntXit6U2gwMhwKojhwpfhXkzWSLS1cy6DVEi6F9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6\",\"dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]},\"src/TD.sol\":{\"keccak256\":\"0xb5d9ddc58bc73d20e0e8df4ee44af23a24d26832ea2de5f53a84567846eca527\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://729854974c321e77be006b708f38868c1a0082bce2a603c34d81b40c8564f8c6\",\"dweb:/ipfs/QmdXS4ZmyGuJSa8hnYTA7D2piM6KnLnj1MVmS8vPrwNt6q\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "initialSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getToken",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/TD.sol": "TD"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d",
        "urls": [
          "bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b",
          "dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x198433113545cc855ffb34ec844854dd59e1b8420a97a876ce67eae3b3929c50",
        "urls": [
          "bzz-raw://d26179570c319b970030e366c034a27921c6de0e78bbe32ea34a1b30c08d24af",
          "dweb:/ipfs/QmTKRYXntXit6U2gwMhwKojhwpfhXkzWSLS1cy6DVEi6F9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3",
        "urls": [
          "bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204",
          "dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b",
        "urls": [
          "bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6",
          "dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366",
        "urls": [
          "bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a",
          "dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA"
        ],
        "license": "MIT"
      },
      "src/TD.sol": {
        "keccak256": "0xb5d9ddc58bc73d20e0e8df4ee44af23a24d26832ea2de5f53a84567846eca527",
        "urls": [
          "bzz-raw://729854974c321e77be006b708f38868c1a0082bce2a603c34d81b40c8564f8c6",
          "dweb:/ipfs/QmdXS4ZmyGuJSa8hnYTA7D2piM6KnLnj1MVmS8vPrwNt6q"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/TD.sol",
    "id": 41657,
    "exportedSymbols": {
      "Context": [
        40079
      ],
      "ERC20": [
        39953
      ],
      "IERC20": [
        40031
      ],
      "IERC20Errors": [
        39343
      ],
      "IERC20Metadata": [
        40057
      ],
      "TD": [
        41656
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:399:24",
    "nodes": [
      {
        "id": 41613,
        "nodeType": "PragmaDirective",
        "src": "33:23:24",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 41614,
        "nodeType": "ImportDirective",
        "src": "58:55:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41657,
        "sourceUnit": 39954,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41656,
        "nodeType": "ContractDefinition",
        "src": "117:315:24",
        "nodes": [
          {
            "id": 41636,
            "nodeType": "FunctionDefinition",
            "src": "145:155:24",
            "nodes": [],
            "body": {
              "id": 41635,
              "nodeType": "Block",
              "src": "241:59:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41630,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "262:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 41631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "266:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "262:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41632,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41622,
                        "src": "274:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41629,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39793,
                      "src": "256:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 41633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "256:32:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41634,
                  "nodeType": "ExpressionStatement",
                  "src": "256:32:24"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 41625,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41618,
                    "src": "227:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 41626,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41620,
                    "src": "233:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 41627,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 41624,
                  "name": "ERC20",
                  "nameLocations": [
                    "221:5:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39953,
                  "src": "221:5:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "221:19:24"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 41623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41618,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "171:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 41636,
                  "src": "157:18:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41617,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41620,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "191:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 41636,
                  "src": "177:20:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41619,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "177:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41622,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "206:13:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 41636,
                  "src": "198:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "198:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "156:64:24"
            },
            "returnParameters": {
              "id": 41628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:0:24"
            },
            "scope": 41656,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41655,
            "nodeType": "FunctionDefinition",
            "src": "308:121:24",
            "nodes": [],
            "body": {
              "id": 41654,
              "nodeType": "Block",
              "src": "348:81:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41642,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "365:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 41643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "369:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "365:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 41644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "377:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 41645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "382:2:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 41646,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39517,
                              "src": "388:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                "typeString": "function () view returns (uint8)"
                              }
                            },
                            "id": 41647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "388:10:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "382:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "377:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41641,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39793,
                      "src": "359:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 41650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "359:40:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41651,
                  "nodeType": "ExpressionStatement",
                  "src": "359:40:24"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 41652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "417:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 41640,
                  "id": 41653,
                  "nodeType": "Return",
                  "src": "410:11:24"
                }
              ]
            },
            "functionSelector": "21df0da7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "317:8:24",
            "parameters": {
              "id": 41637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:2:24"
            },
            "returnParameters": {
              "id": 41640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41639,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41655,
                  "src": "343:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41638,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "342:6:24"
            },
            "scope": 41656,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41615,
              "name": "ERC20",
              "nameLocations": [
                "132:5:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39953,
              "src": "132:5:24"
            },
            "id": 41616,
            "nodeType": "InheritanceSpecifier",
            "src": "132:5:24"
          }
        ],
        "canonicalName": "TD",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41656,
          39953,
          39343,
          40057,
          40031,
          40079
        ],
        "name": "TD",
        "nameLocation": "126:2:24",
        "scope": 41657,
        "usedErrors": [
          39313,
          39318,
          39323,
          39332,
          39337,
          39342
        ],
        "usedEvents": [
          39965,
          39974
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 24
}